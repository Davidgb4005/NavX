/*
  Serial Event example

  When new serial data arrives, this sketch adds it to a String.
  When a newline is received, the loop prints the string and clears it.

  A good test for this is to try it with a GPS receiver that sends out
  NMEA 0183 sentences.

  NOTE: The serialEvent() feature is not available on the Leonardo, Micro, or
  other ATmega32U4 based boards.

  created 9 May 2011
  by Tom Igoe

  This example code is in the public domain.

  https://www.arduino.cc/en/Tutorial/BuiltInExamples/SerialEvent
*/

String inputString = "";      // a String to hold incoming data
bool stringComplete = false;  // whether the string is complete

void setup() {
  pinMode(13,OUTPUT);
  pinMode(14,OUTPUT);
  digitalWrite(13,1);
  digitalWrite(14,1);
  pinMode(6,OUTPUT);
  pinMode(9,OUTPUT);
  digitalWrite(6,0);
  digitalWrite(9,0);
  // initialize serial:
  Serial.begin(9600);
  Serial1.begin(115200);
  // reserve 200 bytes for the inputString:
  inputString.reserve(200);
}
char uartMessage[255];
char* buffer = uartMessage;

void loop() {
  // Simulate sending a message
  delay(5);
Serial1.write('a');





  // Read incoming bytes
  while (Serial1.available()) {
    char receivedChar = Serial1.read();
    if (buffer - uartMessage < sizeof(uartMessage) - 1) {  // Ensure no overflow
      *buffer = receivedChar;
      buffer++;
    }
  }

  // Null-terminate the string
  *buffer = '\0';

  // Print the received message
  for (char* i = uartMessage; *i != '\0'; i++) {
    Serial.print(*i);
  }
  Serial.println(' ');

  // Reset the buffer for the next message
  buffer = uartMessage;
}


